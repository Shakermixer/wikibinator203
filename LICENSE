Ben F Rayfield offers the wikibinator203 VM prototype, UI, and various tools, under this license

I (Ben F Rayfield) know this license is a mess and am planning to rewrite it to be much smaller,
divided into small paragraphs, move some parts to tutorials or other documents about the software,
and only keep the parts that arent strongly implied by the other parts.
Now that I've written about the "infinite size unweighted directed-graph with 3 edge-colors",
that seems an easier way to explain why it would cause problems for
specific people to own specific nodes and edges in that directed-graph,
and that nodes could be dangerous if copied into executable files outside the system, etc.

This license contains the 3 paragraphs of the MIT license and some extra copyleft stuff.

This is experimental software.

This software and license is not under the laws of any specific physical location
but whoever is using it together can work that out among eachother.

[THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.] (COPIED FROM LAST PARAGRAPH OF MIT LICENSE, APPLIES HERE)

How #wikibinator will allow you to safely share libelous info and misinformation:
If everything you say is true, you are not guilty of libel or of spreading misinformation.
A true statement can contain many false statements, we know from turing machines.
m = some misinformation;
w = "m is information, but Im not saying its true or false";
Its not a lie to say w is true, but its a lie to say m is true.
If w contains a web of debates using public-keys, some telling truth & some lying,
thats all inside w, so can share w (contains m).

It may be illegal in some countries to say certain things,
such as "the holocaust didnt happen" for example.
This license protects free speech in evilbit=true namespace
by making it normal that anything said there is not claiming it is true,
as lambdas generate many variants of things that are true and many false,
so it would be negligence to believe something there just because you read it,
and all it means is that its a piece of data, not that its true or false.
If you put such data there and say with your mouth its true,
that thing your mouth did may be claiming "the holocaust didnt happen",
but that string "the holocaust didnt happen",
along with "the holocaust is made of green cheese" etc are just data
and are not legal claims. Numbers by themself do not have legal effect.

This software uses a constant infinite size unweighted directed-graph
with 3 edge-colors, that contains all possible patterns of finite
amount of information that take finite amount of compute time and memory,
which an infinite number of subsets of it (if not the whole thing?)
are already near optimally compressed (near lowest kolmogorov complexity)
in its natural form. These edges are Func, Param, and EvalsTo,
where Func called on Param returns EvalsTo. Nobody owns that directed-graph
nor any nodes or edges in it,
nor the using of it as lambdas/wikibs (nodes are lambdas/wikibs).
Nobody owns wikibs. They are shared facts of maths many people and software
can use together. A wikib is a kind of number, stateless and immutable
(or approximations of it in some ways of using it)
universal lambda function, combinator, pattern-calculus function, fact of math,
a pure function, and a data structure that is defined completely as a forest
node with 2 child wikibs down to leaf (leaf also has 2 childs (identity
function and leaf)). Leaf (aka U aka Wikibinator203) is the universal
function, from which all turing-complete patterns of finite amount of
information can be built, used, and shared. Forall wikib x, forall wikib y,
x called on y is a wikib, which may be halted or evaling (to a halted wikib
or never halts). Every wikib is a derivative-work of leaf, which can be
proven by calling leaf on itself in various combinations, to make any wikib.
While obeying this license and using a wikibinator203 VM that correctly
implements the spec, it is safe to call any wikib on any wikib since all
it does is find or create wikibs, but if its used to control external
systems (such as robots, buying and selling things, or telling people
what to believe or what to do outside a simulated world, or copying a
wikib to a new file, renaming that file x.exe, then double-clicking that
file), it is entirely the responsibility of who hooks it to those systems
to verify its safe, such as by math proofs, networks of digital signatures,
or other evidence, especially considering that it can create all possible
computer viruses and ransomware and other evil things (safely in a
sandbox across 1 or many computers) and good things, and that in 1 of
its 2 namespaces (evilbit=true), it is an antivirus quarantine and
uncensored area, a sandbox across whichever computers opt into using
this data structure together, where all possible wikibs are allowed.
In the antivirus quarantine, you may share viruses like posts in a
social network, turing-complete messages that others may, for example,
say ["this is a virus" TheVirus] or use the virus in a meme-like piece
of art (such as a satirical work making fun of viruses could literally
contain such viruses) and do experiments, make games, musical
instruments, tools, or anything of pure information. It would be very
destructive to the system if there is any possible math statement which
is not allowed, such as removing a virus or other "evil" wikibs while
it has incoming pointers. It would be destructive to the wikib systems,
because halting-oracles have been proven impossible, and a halting-oracle
would be needed to determine if a certain wikib would generate, or would
not generate, a certain other wikib, without waiting up to an infinite
time to observe what it does (by the universal lambda math). The other
namespace (evilbit=false) works like the normal internet, if those who
opt in can find a way to do that without breaking the wikib math so much
its unusable, a way to claim a certain wikib is safe, unlike in
evilbit=true where there is no reasonable expectation that it is safe
to give those wikibs execute permission, or to believe any information
in them, or to obey anything they might tell you to do with a message
on the screen. It would be negligence for someone to give execute
permission to, believe, or obey, anything in an antivirus quarantine
(which many apps may run inside across many computers) if that causes
a problem, and similarly for the evilbit=false area, since saying its
evilbit=true or evilbit=false (which happens in the first byte of a
256 bit id for example) is just a word that people or computers can
say about a wikib, that they believe it to be safe or not.
If in doubt, use evilbit=true aka antivirus quarantine.
The 256 (or 512) bit ids can safely be shared in public as #hashtags.
The sending and receiving of this data structure across a network
does not count that network as an "external system"
and is part of the sandbox. Similarly, a Human just using the
facts of math together with other Humans and AIs, is part of the sandbox,
as a wikib can exist inside a Human mind (which is turing-complete),
but believing or obeying it in the Human mind is outside the sandbox.
A wikib being a "fact of math" is inside the sandbox,
and can derive its own ids which are similar to godel-numbers,
and in the pure deterministic (not "approximations") way of using it,
it can not lie about anything inside the sandbox,
but if its viewed as statements about outside the sandbox those can be lies.
For example, the wikib "this sentence is false", and "two plus two equals five",
are both true, since those are just utf8 bytes, and it is true that
they do not break any rules of the universal lambda,
but if you view them as statements about natural-language
then that refers to patterns of thoughts outside the sandbox.
If instead you derive numbers and use the Ax opcode to prove
a function called on a param gives a certain return value,
then it will not halt if you try to eval either of those in pure math form.
All halted wikibs are true. All wikibs which will never halt are false.
Approximations of wikibs can guarantee halting by recursively limiting
compute time and memory etc, so in theory there should be some way
to safely use it to operate time critical dangerous processes
in the evilbit=true area, but due to the evilbit=false area
"throwing a wrench into the machine" by removing pieces of math
based on Human opinions etc, the antivirus quarantine is safest.
The antivirus quarantine, in the way its the math that the code is based on,
has already whitelisted an infinite set,
(of all of a certain kind of universal function, by calling it on itself in various combos)
unlike the common practice of blacklisting "evil" things as they are
observed or predicted over time. The only thing the antivirus quarantine blacklists
is mutable state. A pure function can not infect a harddrive or RAM etc,
since it can not call thePureFunction(mutableState)->next_mutableState,
except to store cached function calls (including wrapping tiny and bigdata size bitstrings).
A virus is only dangerous if it can modify some mutable state.
This is a formal-verification system. This is also a low-latency number-crunching turing-complete system.
For example, this system's turing-complete-type-system can have a linked-list of lambdas
that when called on [church-pair of themself and themself] evals to one of the representations of the exact value of pi,
and if you tried to insert into that linked-list a value not matching that, it would never halt,
and if you tried to insert, in parallel a million values matching that,
you would in each of those million wikib_called_on_wikib get a linked-list with 1 more thing in it.


If there is any conflict between the above "Nobody owns wikibs" paragraph and the below 2 paragraphs copied from MIT license,
then that "Nobody owns wikibs" paragraph wins, overpowers the legal effects, of the 2 paragraphs below,
and if that is not legally possible to do then it is not legally possible to use this software at all.

Except for the "Nobody owns wikibs" paragraph above, which in a copyleft way applies to every wikibinator203 VM,
permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
